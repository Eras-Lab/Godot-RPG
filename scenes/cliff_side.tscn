[gd_scene load_steps=29 format=3 uid="uid://b0b0plb3tnphx"]

[ext_resource type="Script" path="res://scenes/cliff_side.gd" id="1_nd3p4"]
[ext_resource type="Texture2D" uid="uid://dowq384yk2kyq" path="res://art/tilesets/plains.png" id="1_x5moi"]
[ext_resource type="Texture2D" uid="uid://covaxxotvm4lb" path="res://art/tilesets/grass.png" id="2_uucfh"]
[ext_resource type="Texture2D" uid="uid://xga82omnrlih" path="res://art/objects/objects.png" id="3_gfh1n"]
[ext_resource type="PackedScene" uid="uid://c3wubdpgmja5a" path="res://player/player.tscn" id="4_hsern"]
[ext_resource type="Resource" uid="uid://dowuttj0uqa6r" path="res://test_inv2.tres" id="7_ngdpr"]
[ext_resource type="Script" path="res://inventory/inventory_data_equip.gd" id="8_ivlfj"]
[ext_resource type="Script" path="res://player/Freya_Swiftwind.gd" id="9_yq62e"]
[ext_resource type="Resource" uid="uid://esyk2i3eyx16" path="res://test_inv_3.tres" id="10_dbu5e"]
[ext_resource type="Script" path="res://player/Morgath_Darkbane.gd" id="11_xfu8s"]
[ext_resource type="Resource" uid="uid://ib00po0dufcg" path="res://test_inv_4.tres" id="12_v64kk"]
[ext_resource type="Resource" uid="uid://cn8jm7m3x7vta" path="res://test_inv_5.tres" id="14_2b7lp"]
[ext_resource type="Resource" uid="uid://btk5ixn2yabpu" path="res://garrick_stormwind_inv.tres" id="15_5fygp"]
[ext_resource type="Script" path="res://inventory/inventory_interface.gd" id="16_nf0y3"]
[ext_resource type="PackedScene" uid="uid://do1yubo7ebqbh" path="res://inventory/inventory.tscn" id="17_ipwsu"]
[ext_resource type="PackedScene" uid="uid://ckbkqswkaw18p" path="res://inventory/slot.tscn" id="18_qswcx"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_jy5lb"]
texture = ExtResource("1_x5moi")
1:0/0 = 0
1:1/0 = 0
1:2/0 = 0
2:2/0 = 0
3:2/0 = 0
3:1/0 = 0
3:0/0 = 0
2:0/0 = 0
2:1/0 = 0
1:4/0 = 0
2:4/0 = 0
3:4/0 = 0
3:5/0 = 0
3:6/0 = 0
3:7/0 = 0
2:7/0 = 0
1:7/0 = 0
1:6/0 = 0
1:5/0 = 0
2:5/0 = 0
2:6/0 = 0
5:6/0 = 0
4:6/0 = 0
4:5/0 = 0
4:4/0 = 0
5:4/0 = 0
5:5/0 = 0
3:3/0 = 0
2:3/0 = 0
1:3/0 = 0
5:2/0 = 0
4:2/0 = 0
4:1/0 = 0
4:0/0 = 0
5:0/0 = 0
5:1/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_bi1vn"]
texture = ExtResource("2_uucfh")
0:0/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_waklh"]
texture = ExtResource("3_gfh1n")
1:1/0 = 0
2:1/0 = 0
0:0/0 = 0
1:0/0 = 0
2:0/0 = 0
3:0/0 = 0
5:0/0 = 0
4:0/0 = 0
4:1/0 = 0
3:1/0 = 0
0:1/0 = 0
0:5/size_in_atlas = Vector2i(3, 4)
0:5/0 = 0
6:7/size_in_atlas = Vector2i(2, 2)
6:7/0 = 0
8:6/size_in_atlas = Vector2i(2, 3)
8:6/0 = 0
10:7/size_in_atlas = Vector2i(2, 2)
10:7/0 = 0

[sub_resource type="TileSet" id="TileSet_j2dke"]
sources/0 = SubResource("TileSetAtlasSource_jy5lb")
sources/1 = SubResource("TileSetAtlasSource_bi1vn")
sources/2 = SubResource("TileSetAtlasSource_waklh")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_navdf"]
size = Vector2(83, 53)

[sub_resource type="GDScript" id="GDScript_u70xg"]
script/source = "extends CharacterBody2D

signal toggle_inventory

@export var inventory_data: InventoryData
@export var equip_inventory_data: InventoryDataEquip

var enemy_in_attackrange = false
var enemy_attack_cooldown = true
var walking_towards = \"none\"

var player_name = \"Lyra Shadowheart\"

#player stats
var health = 160
var attack_damage = 10
var defense = 10
var stamina = 10
var strength = 10
var constitution = 10
var dexterity = 10
var intelligence = 10

var player_alive = true

var attack_ip = false

const speed = 100
var current_dir = \"none\"

var buildings = null
var locations = null

enum Direction { UP, DOWN, LEFT, RIGHT, NONE }

var current_direction = Direction.NONE
var step_size = 1

var current_action = null
@onready var buildings_list = $\"../Buildings\"
@onready var http_request = $HTTPRequest


func _ready():
	PlayerManager.players.push_back(self)
	$AnimatedSprite2D.play(\"front_idle\")
	buildings = buildings_list.get_children()	
	locations = {}
	for building in buildings:
		print(building)
		locations[building.name] = building		
	walk_towards(\"Building2\")		
	#test_http_request()		
	http_request.request_completed.connect(_on_http_request_request_comspleted)	
	#send_request(\"Test\")
	
func _physics_process(delta):
	player_movement(delta)
	enemy_attack()
	attack()
	pickup()
	current_camera()
	if walking_towards != \"none\":
		walk_towards(walking_towards)

		

	
	if health <= 0:
		player_alive = false
		health = 0
		print(\"player has died\")
		self.queue_free()
	
func player_movement(delta):
	
	if Input.is_action_pressed(\"ui_right\"):
		current_dir = \"right\"
		play_anim(1)
		velocity.x = speed
		velocity.y = 0
	elif Input.is_action_pressed(\"ui_left\"):
		current_dir = \"left\"
		play_anim(1)
		velocity.x = -speed
		velocity.y = 0
	elif Input.is_action_pressed(\"ui_down\"):
		current_dir = \"down\"
		play_anim(1)
		velocity.x = 0
		velocity.y = speed
	elif Input.is_action_pressed(\"ui_up\"):
		current_dir = \"up\"
		play_anim(1)
		velocity.x = 0
		velocity.y = -speed
	else:
		play_anim(0)
		velocity.x = 0
		velocity.y = 0
		
	move_and_slide()

func play_anim(movement):
	var dir = current_dir
	var anim = $AnimatedSprite2D
	
	if dir == \"right\":
		anim.flip_h = false
		if movement == 1:
			anim.play(\"side_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"side_idle\")
	if dir == \"left\":
		anim.flip_h = true
		if movement == 1:
			anim.play(\"side_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"side_idle\")
	if dir == \"down\":
		anim.flip_h = false
		if movement == 1:
			anim.play(\"front_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"front_idle\")
	if dir == \"up\":
		anim.flip_h = false
		if movement == 1:
			anim.play(\"back_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"back_idle\")


func _on_player_hitbox_body_entered(body):
	if body.has_method(\"enemy\"):
		enemy_in_attackrange = true


func _on_player_hitbox_body_exited(body):
	if body.has_method(\"enemy\"):
		enemy_in_attackrange = false

func enemy_attack():
	if enemy_in_attackrange and enemy_attack_cooldown == true:
		health = health - 20
		enemy_attack_cooldown = false
		
		$attack_cooldown.start()
		#print(health)
	
func player():
	pass
	
func _on_attack_cooldown_timeout():
	enemy_attack_cooldown = true

func attack():
	var dir = current_dir
	
	if Input.is_action_just_pressed(\"attack\"):
		global.player_current_attack = true
		attack_ip = true
		if dir == \"right\":
			$AnimatedSprite2D.flip_h = false
			$AnimatedSprite2D.play(\"side_attack\")
			$deal_attack_timer.start()
		if dir == \"left\":
			$AnimatedSprite2D.flip_h = true
			$AnimatedSprite2D.play(\"side_attack\")
			$deal_attack_timer.start()
		if dir == \"down\":
			$AnimatedSprite2D.play(\"front_attack\")
			$deal_attack_timer.start()
		if dir == \"up\":
			$AnimatedSprite2D.play(\"back_attack\")
			$deal_attack_timer.start()

func pickup():
	if Input.is_action_just_pressed(\"interact\"):
		print(\"interact button pressed\")

func _on_deal_attack_timer_timeout():
	$deal_attack_timer.stop()
	global.player_current_attack = false
	attack_ip = false

func current_camera():
	if global.current_scene == \"world\":
		$world_camera.enabled = true
		$cliffside_camera.enabled = false
	elif global.current_scene == \"cliff_side\":
		$world_camera.enabled = false
		$cliffside_camera.enabled = true

func _on_line_edit_text_submitted(new_text):
	print(new_text)
	global.player_talking = true
	global.plyaer_message = new_text
	var json = JSON.stringify(new_text)
	var headers = [\"Content-Type: application/json\"]
	$HTTPRequest.request(\"http://localhost:5000/openai\", headers, HTTPClient.METHOD_POST, json)

func _unhandled_input(event):
	if Input.is_action_just_pressed(\"inventory\"):
		toggle_inventory.emit()
		
func get_drop_position():
	var dir = current_dir
	
	if dir == \"none\":
		return position + Vector2(0, 35)
	if dir == \"right\":
		return position + Vector2(35, 0)
	if dir == \"left\":
		return position + Vector2(-35, 0)
	if dir == \"up\":
		return position + Vector2(0, -35)
	if dir == \"down\":
		return position + Vector2(0, 35)
	

func heal(heal_value: int) -> void:
	health += heal_value

func equip(stats) -> void:
	if stats[\"attack_damage\"]:
		attack_damage += stats[\"attack_damage\"]
	
	if stats[\"strength\"]:
		strength += stats[\"strength\"]
	
	if stats[\"constitution\"]:
		constitution += stats[\"constitution\"]

func unequip(stats) -> void:
	if stats[\"attack_damage\"]:
		attack_damage -= stats[\"attack_damage\"]
	
	if stats[\"strength\"]:
		strength -= stats[\"strength\"]
	
	if stats[\"constitution\"]:
		constitution -= stats[\"constitution\"]
		
func walk_towards(location_name):
	var location = locations[location_name]
	if location != null:
		var direction = location.position - position

		if current_direction == Direction.NONE:
			if abs(direction.x) > 0:
				current_direction = Direction.RIGHT if direction.x > 0 else Direction.LEFT
			else:
				current_direction = Direction.UP if direction.y > 0 else Direction.DOWN

		if current_direction == Direction.UP or current_direction == Direction.DOWN:
			if direction.y > 0:
				position.y += min(step_size, direction.y)
				if position.y >= location.position.y:
					current_direction = Direction.NONE
			else:
				position.y -= min(step_size, -direction.y)
				if position.y <= location.position.y:
					current_direction = Direction.NONE

		elif current_direction == Direction.LEFT or current_direction == Direction.RIGHT:
			if direction.x > 0:
				position.x += min(step_size, direction.x)
				if position.x >= location.position.x:
					current_direction = Direction.NONE
			else:
				position.x -= min(step_size, -direction.x)
				if position.x <= location.position.x:
					current_direction = Direction.NONE

		walking_towards = location_name
		#Call increase_dex		
		
func send_request(user_input: String):
	var headers = [\"Content-Type: application/json\"]
	#var nearby_players = self.get_parent().close_npc_list
	print(\"action requested\")
	#function to check nearby NPCs
	var body = {
		\"npc_name\": self.get_parent().name,
		\"npc_desc\": \"Test\",
		\"location\": \"park\",
		\"activity\": current_action,
		\"inventory\": [],
		\"message\": user_input,
		\"funds\": 100
	}
	var body_text = JSON.stringify(body)  # use JSON.print() to convert dict to JSON string
	if user_input == \"attack\":
		print(\"moving to enemy\")
		self.get_parent().start_attacking()
	
	elif user_input == \"conversation\":  # Add this line
		self.get_parent().start_walking_towards_npc()
	else:
		http_request.request(\"http://127.0.0.1:5000/chat\", headers, HTTPClient.METHOD_POST, body_text)

func test_http_request():
	print(\"sending request\")
	var url = \"https://httpbin.org/get\" # Replace this with your url
	http_request.request(url) # Send a GET request

func _on_http_request_request_comspleted(result, response_code, headers, body):
	print(\"request completed\")
	print(self.name)
	print(response_code)
	#print(body)
	print(result)
		#If Nill or null just wait*
	#var json = JSON.parse_string(body.get_string_from_utf8()
	var res = str_to_var(body.get_string_from_utf8())
	if res == null:
		self.send_request(\"did nothing\")
		return
	var response = JSON.parse_string(res)	
	
	#var text = response[\"choices\"][0][\"text\"].strip_edges()
	print(\"Who?\", self.get_parent().name)
	print(\"RESPONSE\", response)
	#self.get_parent().change_panel_text(response.action.thought)
	#self.get_parent().change_emotion(response.action.feeling)
	#self.get_node(\"/root/world/info_box\").get_node(self.get_parent().name).get_node(\"thought\").text = response.action.thought

	if response.action.type == \"walkTo\":
		current_action = \"walking\"
		var location_name = response.action.where
		print(\"walking to \" + location_name)
		self.walk_towards(location_name)
		self.send_request(\"Just walked to \" + location_name)
				
	elif response.action.type == \"wait\":
		print(\"WAITING\")
		self.send_request(\"Just Waited\")
									
			

func increase_attack_damage(amount):
	attack_damage += amount
	print(\"Player\", self.name)
	print(\"attack increased to\", self.attack_damage)
	

func increase_strength(amount):
	strength += amount
	print(\"Player\", self.name)
	print(\"strength increased to\", self.strength)		
	
func increase_health(amount):
	health += amount
	print(\"Player\", self.name)
	print(\"health increased to\", self.health)	

func increase_constitution(amount):
	constitution += amount
	print(\"Player\", self.name)
	print(\"constitution increased to\", self.constitution)		
"

[sub_resource type="Resource" id="Resource_f4r5p"]
script = ExtResource("8_ivlfj")
slot_datas = Array[Resource("res://inventory/slot_data.gd")]([null, null, null, null])
player = 0

[sub_resource type="GDScript" id="GDScript_cydr4"]
script/source = "extends CharacterBody2D

signal toggle_inventory

@export var inventory_data: InventoryData
@export var equip_inventory_data: InventoryDataEquip

var enemy_in_attackrange = false
var enemy_attack_cooldown = true
var walking_towards = \"none\"

var player_name = \"Grimgar Stonebeard\"

#player stats
var health = 160
var attack_damage = 10
var defense = 10
var stamina = 10
var strength = 10
var constitution = 10
var dexterity = 10
var intelligence = 10

var player_alive = true

var attack_ip = false

const speed = 100
var current_dir = \"none\"

var buildings = null
var locations = null

enum Direction { UP, DOWN, LEFT, RIGHT, NONE }

var current_direction = Direction.NONE
var step_size = 1

var current_action = null
@onready var buildings_list = $\"../Buildings\"
@onready var http_request = $HTTPRequest


func _ready():
	PlayerManager.players.push_back(self)
	$AnimatedSprite2D.play(\"front_idle\")
	buildings = buildings_list.get_children()	
	locations = {}
	for building in buildings:
		print(building)
		locations[building.name] = building		
	walk_towards(\"Building3\")		
	#test_http_request()		
	http_request.request_completed.connect(_on_http_request_request_comspleted)	
	#send_request(\"Test\")
	
func _physics_process(delta):
	player_movement(delta)
	enemy_attack()
	attack()
	pickup()
	current_camera()
	if walking_towards != \"none\":
		walk_towards(walking_towards)

		

	
	if health <= 0:
		player_alive = false
		health = 0
		print(\"player has died\")
		self.queue_free()
	
func player_movement(delta):
	
	if Input.is_action_pressed(\"ui_right\"):
		current_dir = \"right\"
		play_anim(1)
		velocity.x = speed
		velocity.y = 0
	elif Input.is_action_pressed(\"ui_left\"):
		current_dir = \"left\"
		play_anim(1)
		velocity.x = -speed
		velocity.y = 0
	elif Input.is_action_pressed(\"ui_down\"):
		current_dir = \"down\"
		play_anim(1)
		velocity.x = 0
		velocity.y = speed
	elif Input.is_action_pressed(\"ui_up\"):
		current_dir = \"up\"
		play_anim(1)
		velocity.x = 0
		velocity.y = -speed
	else:
		play_anim(0)
		velocity.x = 0
		velocity.y = 0
		
	move_and_slide()

func play_anim(movement):
	var dir = current_dir
	var anim = $AnimatedSprite2D
	
	if dir == \"right\":
		anim.flip_h = false
		if movement == 1:
			anim.play(\"side_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"side_idle\")
	if dir == \"left\":
		anim.flip_h = true
		if movement == 1:
			anim.play(\"side_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"side_idle\")
	if dir == \"down\":
		anim.flip_h = false
		if movement == 1:
			anim.play(\"front_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"front_idle\")
	if dir == \"up\":
		anim.flip_h = false
		if movement == 1:
			anim.play(\"back_walk\")
		elif movement == 0:
			if attack_ip == false:
				anim.play(\"back_idle\")


func _on_player_hitbox_body_entered(body):
	if body.has_method(\"enemy\"):
		enemy_in_attackrange = true


func _on_player_hitbox_body_exited(body):
	if body.has_method(\"enemy\"):
		enemy_in_attackrange = false

func enemy_attack():
	if enemy_in_attackrange and enemy_attack_cooldown == true:
		health = health - 20
		enemy_attack_cooldown = false
		
		$attack_cooldown.start()
		#print(health)
	
func player():
	pass
	
func _on_attack_cooldown_timeout():
	enemy_attack_cooldown = true

func attack():
	var dir = current_dir
	
	if Input.is_action_just_pressed(\"attack\"):
		global.player_current_attack = true
		attack_ip = true
		if dir == \"right\":
			$AnimatedSprite2D.flip_h = false
			$AnimatedSprite2D.play(\"side_attack\")
			$deal_attack_timer.start()
		if dir == \"left\":
			$AnimatedSprite2D.flip_h = true
			$AnimatedSprite2D.play(\"side_attack\")
			$deal_attack_timer.start()
		if dir == \"down\":
			$AnimatedSprite2D.play(\"front_attack\")
			$deal_attack_timer.start()
		if dir == \"up\":
			$AnimatedSprite2D.play(\"back_attack\")
			$deal_attack_timer.start()

func pickup():
	if Input.is_action_just_pressed(\"interact\"):
		print(\"interact button pressed\")

func _on_deal_attack_timer_timeout():
	$deal_attack_timer.stop()
	global.player_current_attack = false
	attack_ip = false

func current_camera():
	if global.current_scene == \"world\":
		$world_camera.enabled = true
		$cliffside_camera.enabled = false
	elif global.current_scene == \"cliff_side\":
		$world_camera.enabled = false
		$cliffside_camera.enabled = true

func _on_line_edit_text_submitted(new_text):
	print(new_text)
	global.player_talking = true
	global.plyaer_message = new_text
	var json = JSON.stringify(new_text)
	var headers = [\"Content-Type: application/json\"]
	$HTTPRequest.request(\"http://localhost:5000/openai\", headers, HTTPClient.METHOD_POST, json)

func _unhandled_input(event):
	if Input.is_action_just_pressed(\"inventory\"):
		toggle_inventory.emit()
		
func get_drop_position():
	var dir = current_dir
	
	if dir == \"none\":
		return position + Vector2(0, 35)
	if dir == \"right\":
		return position + Vector2(35, 0)
	if dir == \"left\":
		return position + Vector2(-35, 0)
	if dir == \"up\":
		return position + Vector2(0, -35)
	if dir == \"down\":
		return position + Vector2(0, 35)
	

func heal(heal_value: int) -> void:
	health += heal_value

func equip(stats) -> void:
	if stats[\"attack_damage\"]:
		attack_damage += stats[\"attack_damage\"]
	
	if stats[\"strength\"]:
		strength += stats[\"strength\"]
	
	if stats[\"constitution\"]:
		constitution += stats[\"constitution\"]

func unequip(stats) -> void:
	if stats[\"attack_damage\"]:
		attack_damage -= stats[\"attack_damage\"]
	
	if stats[\"strength\"]:
		strength -= stats[\"strength\"]
	
	if stats[\"constitution\"]:
		constitution -= stats[\"constitution\"]
		
func walk_towards(location_name):
	var location = locations[location_name]
	if location != null:
		var direction = location.position - position

		if current_direction == Direction.NONE:
			if abs(direction.x) > 0:
				current_direction = Direction.RIGHT if direction.x > 0 else Direction.LEFT
			else:
				current_direction = Direction.UP if direction.y > 0 else Direction.DOWN

		if current_direction == Direction.UP or current_direction == Direction.DOWN:
			if direction.y > 0:
				position.y += min(step_size, direction.y)
				if position.y >= location.position.y:
					current_direction = Direction.NONE
			else:
				position.y -= min(step_size, -direction.y)
				if position.y <= location.position.y:
					current_direction = Direction.NONE

		elif current_direction == Direction.LEFT or current_direction == Direction.RIGHT:
			if direction.x > 0:
				position.x += min(step_size, direction.x)
				if position.x >= location.position.x:
					current_direction = Direction.NONE
			else:
				position.x -= min(step_size, -direction.x)
				if position.x <= location.position.x:
					current_direction = Direction.NONE

		walking_towards = location_name
		#Call increase_dex		
		
func send_request(user_input: String):
	var headers = [\"Content-Type: application/json\"]
	#var nearby_players = self.get_parent().close_npc_list
	print(\"action requested\")
	#function to check nearby NPCs
	var body = {
		\"npc_name\": self.get_parent().name,
		\"npc_desc\": \"Test\",
		\"location\": \"park\",
		\"activity\": current_action,
		\"inventory\": [],
		\"message\": user_input,
		\"funds\": 100
	}
	var body_text = JSON.stringify(body)  # use JSON.print() to convert dict to JSON string
	if user_input == \"attack\":
		print(\"moving to enemy\")
		self.get_parent().start_attacking()
	
	elif user_input == \"conversation\":  # Add this line
		self.get_parent().start_walking_towards_npc()
	else:
		http_request.request(\"http://127.0.0.1:5000/chat\", headers, HTTPClient.METHOD_POST, body_text)

func test_http_request():
	print(\"sending request\")
	var url = \"https://httpbin.org/get\" # Replace this with your url
	http_request.request(url) # Send a GET request

func _on_http_request_request_comspleted(result, response_code, headers, body):
	print(\"request completed\")
	print(self.name)
	print(response_code)
	#print(body)
	print(result)
		#If Nill or null just wait*
	#var json = JSON.parse_string(body.get_string_from_utf8()
	var res = str_to_var(body.get_string_from_utf8())
	if res == null:
		self.send_request(\"did nothing\")
		return
	var response = JSON.parse_string(res)	
	
	#var text = response[\"choices\"][0][\"text\"].strip_edges()
	print(\"Who?\", self.get_parent().name)
	print(\"RESPONSE\", response)
	#self.get_parent().change_panel_text(response.action.thought)
	#self.get_parent().change_emotion(response.action.feeling)
	#self.get_node(\"/root/world/info_box\").get_node(self.get_parent().name).get_node(\"thought\").text = response.action.thought

	if response.action.type == \"walkTo\":
		current_action = \"walking\"
		var location_name = response.action.where
		print(\"walking to \" + location_name)
		self.walk_towards(location_name)
		self.send_request(\"Just walked to \" + location_name)
				
	elif response.action.type == \"wait\":
		print(\"WAITING\")
		self.send_request(\"Just Waited\")
									
			

func increase_attack_damage(amount):
	attack_damage += amount
	print(\"Player\", self.name)
	print(\"attack increased to\", self.attack_damage)
	

func increase_strength(amount):
	strength += amount
	print(\"Player\", self.name)
	print(\"strength increased to\", self.strength)		
	
func increase_health(amount):
	health += amount
	print(\"Player\", self.name)
	print(\"health increased to\", self.health)	

func increase_constitution(amount):
	constitution += amount
	print(\"Player\", self.name)
	print(\"constitution increased to\", self.constitution)		
"

[sub_resource type="Resource" id="Resource_h6cph"]
script = ExtResource("8_ivlfj")
slot_datas = Array[Resource("res://inventory/slot_data.gd")]([null, null, null, null])
player = 0

[sub_resource type="Resource" id="Resource_77ygj"]
script = ExtResource("8_ivlfj")
slot_datas = Array[Resource("res://inventory/slot_data.gd")]([null, null, null, null])
player = 0

[sub_resource type="Resource" id="Resource_l4acg"]
script = ExtResource("8_ivlfj")
slot_datas = Array[Resource("res://inventory/slot_data.gd")]([null, null, null, null])
player = 0

[sub_resource type="Resource" id="Resource_iy7jb"]
script = ExtResource("8_ivlfj")
slot_datas = Array[Resource("res://inventory/slot_data.gd")]([null, null, null, null])
player = 0

[node name="cliff_side" type="Node2D"]
script = ExtResource("1_nd3p4")

[node name="TileMap" type="TileMap" parent="."]
scale = Vector2(1.75381, 1.48779)
tile_set = SubResource("TileSet_j2dke")
format = 2
layer_0/name = "base"
layer_0/tile_data = PackedInt32Array(0, 1, 0, 1, 1, 0, 2, 1, 0, 3, 1, 0, 4, 1, 0, 5, 1, 0, 6, 1, 0, 7, 1, 0, 8, 1, 0, 9, 1, 0, 10, 1, 0, 11, 1, 0, 65547, 1, 0, 65548, 1, 0, 65549, 1, 0, 65550, 1, 0, 65551, 1, 0, 65552, 1, 0, 65553, 1, 0, 16, 1, 0, 15, 1, 0, 14, 1, 0, 13, 1, 0, 12, 1, 0, 17, 1, 0, 18, 1, 0, 65536, 1, 0, 131072, 1, 0, 196608, 1, 0, 262144, 1, 0, 327680, 1, 0, 393216, 1, 0, 458752, 1, 0, 524288, 1, 0, 589824, 1, 0, 655360, 1, 0, 720896, 1, 0, 786432, 1, 0, 851968, 1, 0, 917504, 1, 0, 983040, 1, 0, 1048576, 1, 0, 1114112, 1, 0, 1179648, 1, 0, 1179649, 1, 0, 1179650, 1, 0, 1179651, 1, 0, 1179652, 1, 0, 1179653, 1, 0, 1179654, 1, 0, 1179655, 1, 0, 1179656, 1, 0, 1179657, 65536, 1, 1179658, 131072, 1, 1179659, 196608, 1, 1179660, 1, 0, 1179661, 1, 0, 1179662, 1, 0, 1179663, 1, 0, 1179664, 1, 0, 1179665, 1, 0, 1179666, 1, 0, 1179667, 1, 0, 1179668, 1, 0, 1114132, 1, 0, 1048596, 1, 0, 983060, 1, 0, 917524, 1, 0, 851988, 1, 0, 851987, 1, 0, 786451, 1, 0, 720915, 1, 0, 655379, 1, 0, 589843, 1, 0, 524307, 1, 0, 458771, 1, 0, 393235, 1, 0, 393236, 1, 0, 327700, 1, 0, 262164, 1, 0, 196628, 1, 0, 131092, 1, 0, 65556, 1, 0, 20, 1, 0, 458772, 1, 0, 524308, 1, 0, 589844, 1, 0, 917523, 1, 0, 983059, 1, 0, 655380, 1, 0, 720916, 1, 0, 786452, 1, 0, 196627, 1, 0, 131091, 1, 0, 65555, 1, 0, 19, 1, 0, 262163, 1, 0, 327699, 1, 0, 393234, 1, 0, 327698, 1, 0, 262162, 1, 0, 196626, 1, 0, 131090, 1, 0, 65554, 1, 0, 65546, 1, 0, 65545, 1, 0, 65544, 1, 0, 65543, 1, 0, 65542, 1, 0, 65541, 1, 0, 65540, 1, 0, 65539, 1, 0, 65538, 1, 0, 65537, 1, 0, 131073, 1, 0, 196609, 1, 0, 196610, 1, 0, 196611, 1, 0, 131075, 1, 0, 131076, 1, 0, 131077, 1, 0, 131078, 1, 0, 131079, 1, 0, 131080, 1, 0, 131081, 1, 0, 131082, 1, 0, 131083, 1, 0, 131084, 1, 0, 131085, 1, 0, 131086, 1, 0, 131087, 1, 0, 131088, 1, 0, 131089, 1, 0, 458770, 1, 0, 851986, 1, 0, 917522, 1, 0, 983058, 1, 0, 1048594, 1, 0, 1114130, 1, 0, 1114131, 1, 0, 1048595, 1, 0, 1114129, 1, 0, 1114128, 1, 0, 1114127, 1, 0, 1114126, 1, 0, 1114125, 1, 0, 1114124, 1, 0, 1114123, 196608, 1, 1114122, 131072, 1, 1114121, 65536, 1, 1114120, 1, 0, 1114119, 1, 0, 1114118, 1, 0, 1114117, 1, 0, 1114116, 1, 0, 1114115, 1, 0, 1114114, 1, 0, 1114113, 1, 0, 1048577, 1, 0, 983041, 1, 0, 917505, 1, 0, 327681, 1, 0, 262145, 1, 0, 131074, 1, 0, 262146, 1, 0, 327682, 1, 0, 393217, 1, 0, 458753, 1, 0, 720897, 1, 0, 786433, 1, 0, 851969, 1, 0, 655361, 1, 0, 589825, 1, 0, 524289, 1, 0, 393218, 1, 0, 458754, 1, 0, 524290, 1, 0, 589826, 1, 0, 655362, 1, 0, 720898, 1, 0, 786434, 1, 0, 851970, 1, 0, 917506, 1, 0, 983042, 1, 0, 1048578, 1, 0, 1048579, 1, 0, 1048580, 1, 0, 1048581, 1, 0, 1048582, 1, 0, 1048583, 1, 0, 1048584, 1, 0, 1048585, 65536, 1, 983049, 65536, 1, 983050, 131072, 1, 983051, 196608, 1, 983052, 1, 0, 983053, 1, 0, 983054, 1, 0, 983055, 1, 0, 983056, 1, 0, 983057, 1, 0, 1048593, 1, 0, 1048592, 1, 0, 1048591, 1, 0, 1048590, 1, 0, 1048589, 1, 0, 1048588, 1, 0, 1048587, 196608, 1, 1048586, 131072, 1, 983045, 1, 0, 983044, 1, 0, 917508, 1, 0, 917507, 1, 0, 851971, 1, 0, 786435, 1, 0, 720899, 1, 0, 655363, 1, 0, 589827, 1, 0, 524291, 1, 0, 458755, 1, 0, 393219, 1, 0, 327683, 1, 0, 262147, 1, 0, 196612, 1, 0, 196613, 1, 0, 196614, 1, 0, 196615, 1, 0, 196621, 1, 0, 196622, 1, 0, 196623, 1, 0, 196624, 1, 0, 196625, 1, 0, 262161, 1, 0, 524306, 1, 0, 589842, 1, 0, 655378, 1, 0, 720914, 1, 0, 786450, 1, 0, 917521, 1, 0, 917520, 1, 0, 917519, 1, 0, 917518, 1, 0, 917517, 1, 0, 917516, 1, 0, 917515, 196608, 1, 917514, 131072, 1, 983048, 1, 0, 983047, 1, 0, 983046, 1, 0, 983043, 1, 0, 851972, 1, 0, 786436, 1, 0, 720900, 1, 0, 655364, 1, 0, 589828, 1, 0, 524292, 1, 0, 458756, 1, 0, 393220, 1, 0, 327684, 1, 0, 262148, 1, 0, 196616, 1, 0, 196617, 1, 0, 196618, 1, 0, 196619, 1, 0, 196620, 1, 0, 327697, 1, 0, 393233, 1, 0, 458769, 1, 0, 524305, 1, 0, 589841, 1, 0, 655377, 1, 0, 720913, 1, 0, 786449, 1, 0, 851985, 1, 0, 917509, 1, 0, 917510, 1, 0, 917511, 1, 0, 917512, 1, 0, 917513, 65536, 1, 851976, 1, 0, 851975, 1, 0, 851974, 1, 0, 851973, 1, 0, 655365, 1, 0, 589829, 1, 0, 524293, 1, 0, 458757, 1, 0, 393221, 1, 0, 327685, 1, 0, 262149, 1, 0, 262150, 1, 0, 262151, 1, 0, 262152, 1, 0, 262153, 1, 0, 262154, 1, 0, 262155, 1, 0, 262156, 1, 0, 262157, 1, 0, 262158, 1, 0, 262159, 1, 0, 262160, 1, 0, 327696, 1, 0, 393232, 1, 0, 458768, 1, 0, 524304, 1, 0, 589840, 1, 0, 655376, 1, 0, 720912, 1, 0, 786448, 1, 0, 851984, 1, 0, 851983, 1, 0, 851982, 1, 0, 851981, 1, 0, 851980, 1, 0, 851979, 196608, 1, 851978, 131072, 1, 851977, 65536, 1, 720901, 1, 0, 458758, 1, 0, 393222, 1, 0, 327686, 1, 0, 327687, 1, 0, 327688, 1, 0, 327689, 1, 0, 327690, 1, 0, 327691, 1, 0, 327692, 1, 0, 327693, 1, 0, 327694, 1, 0, 327695, 1, 0, 393231, 1, 0, 458767, 1, 0, 524303, 1, 0, 589839, 1, 0, 655375, 1, 0, 720911, 1, 0, 786447, 1, 0, 786446, 1, 0, 786444, 1, 0, 786443, 196608, 1, 786442, 131072, 1, 786441, 65536, 1, 786440, 1, 0, 786439, 1, 0, 786438, 1, 0, 786437, 1, 0, 393223, 1, 0, 393224, 1, 0, 393225, 65536, 0, 393226, 131072, 0, 393227, 196608, 0, 393228, 1, 0, 393229, 1, 0, 458765, 1, 0, 524302, 1, 0, 589838, 1, 0, 720910, 1, 0, 786445, 1, 0, 720903, 1, 0, 720902, 1, 0, 655366, 1, 0, 589830, 1, 0, 524294, 1, 0, 458759, 1, 0, 458760, 1, 0, 524296, 1, 0, 589832, 1, 0, 589831, 1, 0, 655367, 1, 0, 720904, 1, 0, 655368, 1, 0, 524295, 1, 0, 655369, 65536, 1, 589833, 65536, 1, 524297, 65536, 1, 458761, 65536, 1, 720905, 65536, 1, 458762, 131072, 1, 524298, 131072, 1, 589834, 131072, 1, 655370, 131072, 1, 720906, 131072, 1, 524299, 196608, 1, 589835, 196608, 1, 655371, 196608, 1, 720907, 196608, 1, 458763, 196608, 1, 458764, 1, 0, 524300, 1, 0, 589836, 1, 0, 655372, 1, 0, 720908, 1, 0, 524301, 1, 0, 589837, 1, 0, 655373, 1, 0, 720909, 1, 0, 458766, 1, 0, 393230, 1, 0, 655374, 1, 0)
layer_1/name = "cliff"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 0
layer_1/tile_data = PackedInt32Array(196610, 131072, 6, 196611, 131072, 6, 196612, 131072, 6, 196613, 131072, 6, 196614, 131072, 6, 196615, 131072, 6, 196616, 131072, 6, 196617, 131072, 6, 196618, 131072, 6, 196619, 131072, 6, 196620, 131072, 6, 196621, 131072, 6, 196622, 131072, 6, 196623, 131072, 6, 196624, 131072, 6, 196625, 131072, 6, 196626, 196608, 6, 196609, 131072, 6, 131073, 131072, 5, 65537, 131072, 5, 1, 131072, 5, 131090, 131072, 5, 65554, 131072, 5, 18, 131072, 5, 131074, 131072, 5, 131075, 131072, 5, 131076, 131072, 5, 131077, 131072, 5, 131078, 131072, 5, 131079, 131072, 5, 131080, 131072, 5, 131081, 131072, 5, 131082, 131072, 5, 131083, 131072, 5, 131084, 131072, 5, 131085, 131072, 5, 131086, 131072, 5, 131087, 131072, 5, 131088, 131072, 5, 131089, 131072, 5, 65553, 131072, 5, 65552, 131072, 5, 65551, 131072, 5, 65550, 131072, 5, 65549, 131072, 5, 65548, 131072, 5, 65547, 131072, 5, 65546, 131072, 5, 65545, 131072, 5, 65544, 131072, 5, 65543, 131072, 5, 65542, 131072, 5, 65541, 131072, 5, 65540, 131072, 5, 65539, 131072, 5, 65538, 131072, 5, 2, 131072, 5, 3, 131072, 5, 4, 131072, 5, 5, 131072, 5, 6, 131072, 5, 7, 131072, 5, 8, 131072, 5, 9, 131072, 5, 10, 131072, 5, 11, 131072, 5, 12, 131072, 5, 13, 131072, 5, 14, 131072, 5, 15, 131072, 5, 16, 131072, 5, 17, 131072, 5, 1179648, 131072, 5, 1114112, 196608, 5, 1048576, 196608, 5, 983040, 196608, 5, 917504, 196608, 5, 851968, 196608, 5, 786432, 196608, 5, 720896, 196608, 5, 655360, 196608, 5, 589824, 196608, 5, 524288, 196608, 5, 458752, 196608, 5, 393216, 196608, 5, 327680, 196608, 5, 262144, 196608, 5, 196608, 262144, 6, 131072, 131072, 5, 65536, 131072, 5, 0, 131072, 5, 1179649, 131072, 4, 1179650, 131072, 4, 1179651, 131072, 4, 1179652, 131072, 4, 1179653, 131072, 4, 1179654, 131072, 4, 1179655, 131072, 4, 1179656, 196608, 4, 1179660, 65536, 4, 1179661, 131072, 4, 1179662, 131072, 4, 1179663, 131072, 4, 1179664, 131072, 4, 1179665, 131072, 4, 1179666, 131072, 4, 1179667, 131072, 4, 1179668, 327680, 5, 1114132, 65536, 5, 1048596, 65536, 5, 983060, 65536, 5, 917524, 65536, 5, 851988, 65536, 5, 786452, 65536, 5, 720916, 65536, 5, 655380, 65536, 5, 589844, 65536, 5, 524308, 65536, 5, 458772, 65536, 5, 393236, 65536, 5, 327700, 65536, 5, 262164, 65536, 5, 196628, 65536, 5, 131091, 131072, 5, 196627, 131072, 6, 19, 131072, 5, 20, 131072, 5, 65556, 131072, 5, 131092, 131072, 5, 65555, 131072, 5, 65535, 131072, 5, 131071, 131072, 5, 196607, 131072, 5, 262143, 131072, 5, 327679, 131072, 5, 393215, 131072, 5, 458751, 131072, 5, 524287, 131072, 5, 589823, 131072, 5, 655359, 131072, 5, 720895, 131072, 5, 786431, 131072, 5, 851967, 131072, 5, 917503, 131072, 5, 983039, 131072, 5, 1245183, 131072, 5, 1179647, 131072, 5, 1114111, 131072, 5, 1048575, 131072, 5, 1245192, 131072, 5, 1245193, 131072, 5, 1245194, 131072, 5, 1245195, 131072, 5, 1245196, 131072, 5, 1245197, 131072, 5, 1245198, 131072, 5, 1245199, 131072, 5, 1245200, 131072, 5, 1245201, 131072, 5, 1245202, 131072, 5, 1245203, 131072, 5, 1245204, 131072, 5, 1245184, 131072, 5, 1245185, 131072, 5, 1245186, 131072, 5, 1245187, 131072, 5, 1245188, 131072, 5, 1245189, 131072, 5, 1245190, 131072, 5, 1245191, 131072, 5, 1245205, 131072, 5, 1179669, 131072, 5, 1114133, 131072, 5, 1048597, 131072, 5, 983061, 131072, 5, 917525, 131072, 5, 851989, 131072, 5, 786453, 131072, 5, 720917, 131072, 5, 655381, 131072, 5, 589845, 131072, 5, 524309, 131072, 5, 458773, 131072, 5, 393237, 131072, 5, 327701, 131072, 5, 262165, 131072, 5, 196629, 131072, 5, 131093, 131072, 5, 65557, 131072, 5, 21, 131072, 5, 720918, 131072, 5, 786454, 131072, 5, 851990, 131072, 5, 917526, 131072, 5, 983062, 131072, 5, 1048598, 131072, 5, 1114134, 131072, 5, 1179670, 131072, 5, 1245206, 131072, 5, 1310742, 131072, 5, 1376278, 131072, 5, 1441814, 131072, 5, 1441813, 131072, 5, 1376277, 131072, 5, 1310741, 131072, 5, 1310740, 131072, 5, 1310739, 131072, 5, 1310738, 131072, 5, 1310737, 131072, 5, 1310736, 131072, 5, 1310735, 131072, 5, 1310734, 131072, 5, 1310733, 131072, 5, 1310732, 131072, 5, 1376268, 131072, 5, 1376267, 131072, 5, 1376266, 131072, 5, 1376265, 131072, 5, 1376264, 131072, 5, 1376263, 131072, 5, 1376262, 131072, 5, 1376261, 131072, 5, 1376260, 131072, 5, 1376259, 131072, 5, 1376258, 131072, 5, 1376257, 131072, 5, 1310721, 131072, 5, 1310720, 131072, 5, 1310722, 131072, 5, 1310723, 131072, 5, 1310724, 131072, 5, 1310725, 131072, 5, 1310726, 131072, 5, 1310727, 131072, 5, 1310728, 131072, 5, 1310729, 131072, 5, 1310730, 131072, 5, 1310731, 131072, 5, 1376275, 131072, 5, 1376276, 131072, 5, 1376274, 131072, 5, 1376273, 131072, 5, 1376272, 131072, 5, 1376271, 131072, 5, 1376270, 131072, 5, 1376269, 131072, 5, 1376256, 131072, 5, 1441791, 131072, 5, 1441792, 131072, 5, 1507328, 131072, 5, 1507327, 131072, 5, 1376255, 131072, 5, 1310719, 131072, 5, 1572863, 131072, 5, 1638399, 131072, 5, 1572864, 131072, 5, 1638400, 131072, 5, 1703936, 131072, 5, 1769472, 131072, 5, 1507329, 131072, 5, 1441793, 131072, 5, 1441794, 131072, 5, 1441795, 131072, 5, 1441796, 131072, 5, 1441797, 131072, 5, 1441798, 131072, 5, 1441799, 131072, 5, 1441800, 131072, 5, 1441801, 131072, 5, 1441802, 131072, 5, 1441803, 131072, 5, 1441804, 131072, 5, 1441805, 131072, 5, 1441806, 131072, 5, 1441807, 131072, 5, 1441808, 131072, 5, 1441809, 131072, 5, 1441812, 131072, 5, 1441815, 131072, 5, 1441811, 131072, 5, 1441810, 131072, 5, 1507350, 131072, 5, 1507351, 131072, 5, 1507349, 131072, 5, 1507348, 131072, 5, 1507347, 131072, 5, 1507346, 131072, 5, 1507345, 131072, 5, 1507344, 131072, 5, 1507343, 131072, 5, 1507342, 131072, 5, 1507341, 131072, 5, 1507340, 131072, 5, 1507339, 131072, 5, 1507338, 131072, 5, 1507337, 131072, 5, 1572873, 131072, 5, 1572872, 131072, 5, 1572871, 131072, 5, 1572870, 131072, 5, 1572869, 131072, 5, 1572868, 131072, 5, 1572867, 131072, 5, 1572866, 131072, 5, 1572865, 131072, 5, 1638401, 131072, 5, 1703937, 131072, 5, 1769473, 131072, 5, 1507330, 131072, 5, 1507331, 131072, 5, 1507332, 131072, 5, 1507333, 131072, 5, 1507334, 131072, 5, 1507335, 131072, 5, 1507336, 131072, 5, 1572886, 131072, 5, 1572887, 131072, 5, 1638423, 131072, 5, 1638422, 131072, 5, 1638421, 131072, 5, 1638420, 131072, 5, 1638419, 131072, 5, 1638418, 131072, 5, 1638417, 131072, 5, 1572881, 131072, 5, 1572880, 131072, 5, 1572879, 131072, 5, 1572878, 131072, 5, 1572877, 131072, 5, 1572876, 131072, 5, 1638411, 131072, 5, 1638410, 131072, 5, 1638409, 131072, 5, 1638408, 131072, 5, 1638407, 131072, 5, 1638406, 131072, 5, 1638405, 131072, 5, 1638403, 131072, 5, 1638402, 131072, 5, 1835009, 131072, 5, 1900545, 131072, 5, 1966081, 131072, 5, 2031617, 131072, 5, 2097153, 131072, 5, 2031616, 131072, 5, 1966080, 131072, 5, 1900544, 131072, 5, 1835008, 131072, 5, 2097152, 131072, 5, 2031618, 131072, 5, 1966083, 131072, 5, 2031620, 131072, 5, 2031621, 131072, 5, 2031622, 131072, 5, 2031623, 131072, 5, 2031624, 131072, 5, 2031625, 131072, 5, 2031626, 131072, 5, 2031627, 131072, 5, 2031628, 131072, 5, 2031629, 131072, 5, 2097165, 131072, 5, 2097166, 131072, 5, 2097167, 131072, 5, 2031631, 131072, 5, 2031632, 131072, 5, 2031633, 131072, 5, 2031634, 131072, 5, 2031635, 131072, 5, 2031636, 131072, 5, 2031637, 131072, 5, 2031638, 131072, 5, 2031639, 131072, 5, 2031640, 131072, 5, 2097176, 131072, 5, 2097177, 131072, 5, 2097178, 131072, 5, 2097179, 131072, 5, 2162713, 131072, 5, 2162712, 131072, 5, 2162711, 131072, 5, 2162710, 131072, 5, 2162709, 131072, 5, 2162708, 131072, 5, 2162707, 131072, 5, 2162706, 131072, 5, 2162705, 131072, 5, 2162704, 131072, 5, 2162703, 131072, 5, 2162702, 131072, 5, 2162701, 131072, 5, 2162700, 131072, 5, 2162699, 131072, 5, 2162698, 131072, 5, 2162697, 131072, 5, 2162696, 131072, 5, 2162695, 131072, 5, 2097159, 131072, 5, 2097158, 131072, 5, 2097157, 131072, 5, 2097156, 131072, 5, 2097155, 131072, 5, 2097154, 131072, 5, 2162694, 131072, 5, 2097169, 131072, 5, 2097170, 131072, 5, 2097171, 131072, 5, 1703938, 131072, 5, 1703939, 131072, 5, 1703940, 131072, 5, 1703941, 131072, 5, 1703942, 131072, 5, 1703943, 131072, 5, 1703944, 131072, 5, 1703945, 131072, 5, 1703946, 131072, 5, 1703947, 131072, 5, 1703948, 131072, 5, 1703949, 131072, 5, 1703950, 131072, 5, 1703951, 131072, 5, 1703952, 131072, 5, 1703953, 131072, 5, 1703954, 131072, 5, 1703955, 131072, 5, 1703956, 131072, 5, 1703957, 131072, 5, 1703958, 131072, 5, 1638424, 131072, 5, 1638425, 131072, 5, 1638426, 131072, 5, 1703962, 131072, 5, 1703963, 131072, 5, 1703961, 131072, 5, 1703960, 131072, 5, 1703959, 131072, 5, 1769488, 131072, 5, 1769487, 131072, 5, 1769486, 131072, 5, 1769485, 131072, 5, 1769484, 131072, 5, 1769483, 131072, 5, 1769482, 131072, 5, 1638412, 131072, 5, 1638413, 131072, 5, 1638414, 131072, 5, 1572875, 131072, 5, 1572874, 131072, 5, 1572885, 131072, 5, 1572884, 131072, 5, 1572883, 131072, 5, 1572882, 131072, 5, 1638404, 131072, 5, 1638415, 131072, 5, 1638416, 131072, 5, 1703964, 131072, 5, 1703965, 131072, 5, 1703966, 131072, 5, 1703967, 131072, 5, 1703968, 131072, 5, 1703969, 131072, 5, 1703970, 131072, 5, 1703971, 131072, 5, 1703972, 131072, 5, 1703973, 131072, 5, 1703974, 131072, 5, 1703975, 131072, 5, 1703976, 131072, 5, 1638440, 131072, 5, 1572904, 131072, 5, 1507367, 131072, 5, 1441831, 131072, 5, 1376295, 131072, 5, 1310759, 131072, 5, 1245223, 131072, 5, 1179687, 131072, 5, 1114151, 131072, 5, 1048615, 131072, 5, 1048616, 131072, 5, 983080, 131072, 5, 917544, 131072, 5, 852008, 131072, 5, 786472, 131072, 5, 720936, 131072, 5, 655400, 131072, 5, 589864, 131072, 5, 524328, 131072, 5, 458792, 131072, 5, 393256, 131072, 5, 327720, 131072, 5, 262184, 131072, 5, 196648, 131072, 5, 131112, 131072, 5, 65576, 131072, 5, 40, 131072, 5, 1114152, 131072, 5, 1114153, 131072, 5, 1179689, 131072, 5, 1245225, 131072, 5, 1310761, 131072, 5, 1376297, 131072, 5, 1376296, 131072, 5, 1441832, 131072, 5, 1507368, 131072, 5, 1572903, 131072, 5, 1245224, 131072, 5, 1179688, 131072, 5, 262183, 131072, 5, 196647, 131072, 5, 131111, 131072, 5, 131110, 131072, 5, 65574, 131072, 5, 38, 131072, 5, 39, 131072, 5, 37, 131072, 5, 36, 131072, 5, 35, 131072, 5, 34, 131072, 5, 33, 131072, 5, 32, 131072, 5, 31, 131072, 5, 30, 131072, 5, 29, 131072, 5, 28, 131072, 5, 27, 131072, 5, 26, 131072, 5, 25, 131072, 5, 24, 131072, 5, 23, 131072, 5, 22, 131072, 5, 65558, 131072, 5, 131094, 131072, 5, 196630, 131072, 5, 262166, 131072, 5, 327702, 131072, 5, 393238, 131072, 5, 458774, 131072, 5, 524310, 131072, 5, 589846, 131072, 5, 655382, 131072, 5, 1114135, 131072, 5, 1179671, 131072, 5, 1245207, 131072, 5, 1310743, 131072, 5, 1376279, 131072, 5, 1441816, 131072, 5, 1507352, 131072, 5, 1572888, 131072, 5, 1048599, 131072, 5, 983063, 131072, 5, 917527, 131072, 5, 851991, 131072, 5, 786455, 131072, 5, 720919, 131072, 5, 655383, 131072, 5, 589847, 131072, 5, 524311, 131072, 5, 458775, 131072, 5, 393239, 131072, 5, 327703, 131072, 5, 262167, 131072, 5, 196631, 131072, 5, 131095, 131072, 5, 65559, 131072, 5, 65560, 131072, 5, 131096, 131072, 5, 196632, 131072, 5, 262168, 131072, 5, 327704, 131072, 5, 393240, 131072, 5, 458776, 131072, 5, 524312, 131072, 5, 589848, 131072, 5, 655384, 131072, 5, 720920, 131072, 5, 786456, 131072, 5, 851992, 131072, 5, 917528, 131072, 5, 983064, 131072, 5, 1048600, 131072, 5, 1114136, 131072, 5, 1179672, 131072, 5, 1245208, 131072, 5, 1310744, 131072, 5, 1376280, 131072, 5, 1376281, 131072, 5, 1441817, 131072, 5, 1507353, 131072, 5, 1572889, 131072, 5, 1310745, 131072, 5, 1245209, 131072, 5, 1179673, 131072, 5, 1114137, 131072, 5, 1048601, 131072, 5, 983065, 131072, 5, 917529, 131072, 5, 851993, 131072, 5, 786457, 131072, 5, 720921, 131072, 5, 655385, 131072, 5, 589849, 131072, 5, 524313, 131072, 5, 458777, 131072, 5, 393241, 131072, 5, 327705, 131072, 5, 262169, 131072, 5, 196633, 131072, 5, 131097, 131072, 5, 131098, 131072, 5, 65562, 131072, 5, 65561, 131072, 5)
layer_2/name = "ysort"
layer_2/enabled = true
layer_2/modulate = Color(1, 1, 1, 1)
layer_2/y_sort_enabled = false
layer_2/y_sort_origin = 0
layer_2/z_index = 0
layer_2/tile_data = PackedInt32Array(1048578, 2, 5, 851970, 2, 5, 655362, 2, 5, 393218, 2, 5, 524293, 2, 5, 851973, 2, 5, 1048581, 2, 5, 1048595, 2, 5, 720914, 2, 5, 393234, 2, 5, 393231, 2, 5, 720912, 2, 5, 983056, 2, 5, 983053, 2, 5, 589837, 2, 5, 3, 655362, 7, 7, 655362, 7, 65549, 655362, 7, 65541, 655362, 7, 65553, 655362, 7)

[node name="collisions" type="StaticBody2D" parent="."]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="collisions"]
polygon = PackedVector2Array(27, 92, 566, 95, 569, 432, 353, 435, 340, 448, 342, 511, 247, 508, 249, 450, 234, 431, 27, 436, 17, 420, 21, 28, -110, 48, -95, 627, 922, 614, 667, -75, 33, -23, 23, 82)

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(295.5, 480.5)
shape = SubResource("RectangleShape2D_navdf")

[node name="player_2" parent="." groups=["players"] instance=ExtResource("4_hsern")]
position = Vector2(233, 365)
scale = Vector2(2.69758, 3.62282)
script = SubResource("GDScript_u70xg")
inventory_data = ExtResource("7_ngdpr")
equip_inventory_data = SubResource("Resource_f4r5p")

[node name="player_3" parent="." groups=["players"] instance=ExtResource("4_hsern")]
position = Vector2(293, 139)
scale = Vector2(2.69758, 3.62282)
script = SubResource("GDScript_cydr4")
inventory_data = ExtResource("10_dbu5e")
equip_inventory_data = SubResource("Resource_h6cph")

[node name="player_4" parent="." groups=["players"] instance=ExtResource("4_hsern")]
position = Vector2(284, 244)
scale = Vector2(2.69758, 3.62282)
script = ExtResource("9_yq62e")
inventory_data = ExtResource("12_v64kk")
equip_inventory_data = SubResource("Resource_77ygj")

[node name="player_5" parent="." groups=["players"] instance=ExtResource("4_hsern")]
position = Vector2(220, 251)
scale = Vector2(2.69758, 3.62282)
script = ExtResource("11_xfu8s")
inventory_data = ExtResource("14_2b7lp")
equip_inventory_data = SubResource("Resource_l4acg")

[node name="player" parent="." groups=["players"] instance=ExtResource("4_hsern")]
position = Vector2(303, 335)
scale = Vector2(2.67444, 4.16239)
inventory_data = ExtResource("15_5fygp")
equip_inventory_data = SubResource("Resource_iy7jb")

[node name="UI" type="CanvasLayer" parent="."]

[node name="InventoryInterface" type="Control" parent="UI"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("16_nf0y3")

[node name="PlayerInventory" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 10.0
offset_top = 10.0
offset_right = 50.0
offset_bottom = 50.0
player = 2

[node name="PlayerInventory2" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 10.0
offset_top = 120.0
offset_right = 50.0
offset_bottom = 160.0
player = 1

[node name="PlayerInventory3" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 10.0
offset_top = 230.0
offset_right = 50.0
offset_bottom = 270.0
player = 1

[node name="PlayerInventory4" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 10.0
offset_top = 340.0
offset_right = 50.0
offset_bottom = 380.0
player = 1

[node name="PlayerInventory5" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 10.0
offset_top = 450.0
offset_right = 50.0
offset_bottom = 490.0
player = 1

[node name="EquipInventory" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 450.0
offset_top = 10.0
offset_right = 490.0
offset_bottom = 50.0

[node name="EquipInventory2" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 450.0
offset_top = 120.0
offset_right = 490.0
offset_bottom = 160.0

[node name="EquipInventory3" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 450.0
offset_top = 230.0
offset_right = 490.0
offset_bottom = 270.0

[node name="EquipInventory4" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 450.0
offset_top = 340.0
offset_right = 490.0
offset_bottom = 380.0

[node name="EquipInventory5" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
layout_mode = 0
offset_left = 450.0
offset_top = 450.0
offset_right = 490.0
offset_bottom = 490.0

[node name="ExternalInventory" parent="UI/InventoryInterface" instance=ExtResource("17_ipwsu")]
visible = false
layout_mode = 0
offset_left = 10.0
offset_top = 560.0
offset_right = 50.0
offset_bottom = 600.0

[node name="GrabbedSlot" parent="UI/InventoryInterface" instance=ExtResource("18_qswcx")]
visible = false
modulate = Color(1, 1, 1, 0.490196)
self_modulate = Color(1, 1, 1, 0)
layout_mode = 2
offset_left = 10.0
offset_top = 10.0
offset_right = 74.0
offset_bottom = 74.0

[connection signal="body_entered" from="Area2D" to="." method="_on_area_2d_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_area_2d_body_exited"]
[connection signal="gui_input" from="UI/InventoryInterface" to="UI/InventoryInterface" method="_on_gui_input"]
[connection signal="visibility_changed" from="UI/InventoryInterface" to="UI/InventoryInterface" method="_on_visibility_changed"]
